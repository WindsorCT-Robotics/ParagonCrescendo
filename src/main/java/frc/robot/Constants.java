// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot;

/**
 * The Constants class provides a convenient place for teams to hold robot-wide numerical or boolean
 * constants.  This class should not be used for any other purpose.  All constants should be
 * declared globally (i.e. public static).  Do not put anything functional in this class.
 *
 * <p>It is advised to statically import this class (or one of its inner classes) wherever the
 * constants are needed, to reduce verbosity.
 */
public class Constants {
    public static final String CAN_BUS_NAME = "rio";
    public static final int LEFT_MAIN_TALONFX = 1;
    public static final int LEFT_FOLLOWER_TALONFX = 2;
    public static final int RIGHT_MAIN_TALONFX = 3;
    public static final int RIGHT_FOLLOWER_TALONFX = 4;

    public static final int INTAKE_ROLLER_MOTOR_CANID = 5;
    public static final int INTAKE_BEAMBREAKER = 0;    

    public static final class Arm {
        public static final int MOTOR_CANID = 6;

        public static final double PID_kP = 0.0;
        public static final double ROTATION_VELOCITY_CAP = 1;
        public static final double ROTATION_ACCELERATION_CAP = 1;

        public static final double ROTATION_kG = 0.54;
        public static final double ROTATION_kS = 0;
        public static final double ROTATION_kV = 1.46;
        public static final double ROTATION_kA = 0.03;

        public static final double ROTATION_SCALE = (25) * (44 / 18) * (44 / 18);
        public static final double ROTATION_VELOCITY = 0.8;

        public static final double ROTATION_OFFSET = -1 * 35 * Math.PI / 180 * ROTATION_SCALE; // Offset down
        public static final double ROTATION_CAP = 2 * Math.PI / 3 * ROTATION_SCALE;
    }

    public static final int OUTTAKE_ROLLER_MOTOR_CANID = 7;
    public static final int OUTTAKE_BEAM_BREAKER_PIN = 1;

   /**
    * public static final class DriveConstants {
    *   public static final int kLeftMotor1Port = 0;
    *   public static final int kLeftMotor2Port = 1;
    *   public static final int kRightMotor1Port = 2;
    *   public static final int kRightMotor2Port = 3; 
    * }
    */ 
}

